# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven - Snapshots - ce-14.1.1.0.x

on:
  push:
    branches:
    - '*'
  schedule:
    # Every day at midnight
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        coherenceVersion:
          - 14.1.1-0-13-SNAPSHOT

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8 for Build
      uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: 'zulu'

    - name: Print Versions
      run: mvn -version && ant -version

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-snapshots

    - name: Set up JDK 11 for Build
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'

    - name: Build and Verify
      env:
        COH_VERSION: ${{ matrix.coherenceVersion }}
      shell: bash
      run: |
        # checkout the v5.0.1 tag which is the one that works for 14.1.1.
        git fetch --all --tags
        git checkout v5.0.1
        echo "Running verify against $COH_VERSION and tag v5.0.1"
        mvn --file pom.xml -nsu --batch-mode -e -Dcoherence.version=$COH_VERSION clean install

    - name: Coherence Demo Jar
      uses: actions/upload-artifact@v2
      with:
        name: coherence-demo-jar
        path: target/coherence-demo-*.jar

    - name: Coherence Demo Javadoc
      uses: actions/upload-artifact@v2
      with:
        name: coherence-demo-javadoc
        path: target/coherence-demo-*-javadoc.jar

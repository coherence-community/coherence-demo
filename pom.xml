<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.oracle.coherence</groupId>
  <artifactId>coherence-demo</artifactId>
  <version>4.0.0-SNAPSHOT</version>

  <properties>
    <!-- The groupId of the Coherence product -->
    <coherence.group.id>com.oracle.coherence.ce</coherence.group.id>
    
    <!-- dependency versions -->
    <bedrock.version>5.0.11</bedrock.version>
    <coherence.version>14.1.1-0-1</coherence.version>
    <com.sun.xml.bind.version>2.3.0</com.sun.xml.bind.version>
    <copy.rename.maven.plugin.version>1.0</copy.rename.maven.plugin.version>
    <derby.version>10.14.2.0</derby.version>
    <docker.version>${project.version}</docker.version>
    <eclipselink.version>2.7.5</eclipselink.version>
    <jackson.version>2.10.1</jackson.version>
    <jaeger.version>1.1.0</jaeger.version>
    <jaxrs.version>2.1.6</jaxrs.version>
    <jersey.version>2.29</jersey.version>
    <javax.activation.version>1.2.0</javax.activation.version>
    <jib.version>2.3.0</jib.version>
    <jib.goal>dockerBuild</jib.goal>
    <netty.version>4.1.42.Final</netty.version>
    <opentracing.jdbc.version>0.2.10</opentracing.jdbc.version>

    <!-- maven configuration -->
    <java.version>1.8</java.version>
    <maven.assembly.plugin.version>3.0.0</maven.assembly.plugin.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <maven.compiler.release>8</maven.compiler.release>
    <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
    <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
    <maven.enforcer.plugin.version>1.3.1</maven.enforcer.plugin.version>
    <maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
    <maven.gmaven.plugin.version>1.5</maven.gmaven.plugin.version>
    <maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
    <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
    <maven.shade.plugin.version>3.2.0</maven.shade.plugin.version>
    <maven.replacer.plugin.version>1.5.3</maven.replacer.plugin.version>
    <maven.source.plugin.version>2.1.2</maven.source.plugin.version>
    <maven.version>3.6.0</maven.version>
  </properties>

  <dependencies>
    <!-- coherence -->
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence</artifactId>
      <version>${coherence.version}</version>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-management</artifactId>
      <version>${coherence.version}</version>
    </dependency>
    
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-metrics</artifactId>
      <version>${coherence.version}</version>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-rest</artifactId>
      <version>${coherence.version}</version>
      <exclusions>
        <exclusion>
          <groupId>${coherence.group.id}</groupId>
          <artifactId>coherence</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-http-netty</artifactId>
      <version>${coherence.version}</version>
      <exclusions>
        <exclusion>
          <groupId>${coherence.group.id}</groupId>
          <artifactId>coherence</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- oracle bedrock -->
    <dependency>
      <groupId>com.oracle.bedrock.coherence</groupId>
      <artifactId>coherence-12.2.1</artifactId>
      <version>${bedrock.version}</version>
    </dependency>

    <!-- derby database -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${derby.version}</version>
    </dependency>

    <!-- derby jdbc driver -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>
      <version>${derby.version}</version>
    </dependency>

    <!-- eclispelink -->
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>eclipselink</artifactId>
      <version>${eclipselink.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- jaeger/opentracing -->
    <dependency>
      <groupId>io.jaegertracing</groupId>
      <artifactId>jaeger-client</artifactId>
      <version>${jaeger.version}</version>
    </dependency>

    <!-- jax-ws -->
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>${jaxrs.version}</version>
    </dependency>

    <!-- jersey -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-sse</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- opentracing jdbc -->
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-jdbc</artifactId>
      <version>${opentracing.jdbc.version}</version>
    </dependency>

    <!-- netty -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>${netty.version}</version>
    </dependency>
  </dependencies>

  <url>https://github.com/coherence-community/coherence-demo</url>

  <licenses>
    <license>
      <name>Universal Permissive License 1.0 ("UPL")</name>
      <url>https://opensource.org/licenses/UPL</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Brian Oliver</name>
      <organization>Oracle Corporation</organization>
      <email>brian.oliver@oracle.com></email>
    </developer>

    <developer>
      <name>Tim Middleton</name>
      <organization>Oracle Corporation</organization>
      <email>tim.middleton@oracle.com></email>
    </developer>
  </developers>

  <scm>
    <connection>
      scm:git:https://github.com/coherence-community/coherence-demo.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/coherence-community/coherence-demo.git
    </developerConnection>
    <url>https://github.com/coherence-community/coherence-demo.git</url>
    <tag>HEAD</tag>
  </scm>

  <build>
    <plugins>
      <!-- maven-enforcer-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven.enforcer.plugin.version}</version>
        <executions>
          <execution>
            <id>enforce</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[${maven.version},)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- attach sources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Create a new property "actual.coherence.version" for the manifest
           by replacing '-' with '.' -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>${maven.gmaven.plugin.version}</version>
        <executions>
          <execution>
            <id>add-dynamic-properties</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                properties = project.properties
                version = properties.getProperty("coherence.version")
                properties.setProperty("actual.coherence.version", version.replaceAll('-', '.'))
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- profile to include shaded jar -->
    <profile>
      <id>stand-alone</id>
      <activation>
        <property>
          <name>!docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- create a single jar with everything in it -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${maven.shade.plugin.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <transformers>
                    <transformer
                            implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <mainClass>com.oracle.coherence.demo.application.Launcher
                      </mainClass>
                      <manifestEntries>
                        <Implementation-GroupId>com.oracle.coherence
                        </Implementation-GroupId>
                        <Implementation-Description>Demonstration
                        </Implementation-Description>
                        <Implementation-Vendor>Oracle</Implementation-Vendor>
                        <Implementation-Version>${actual.coherence.version}</Implementation-Version>
                        <Implementation-Build>demo</Implementation-Build>
                        <Specification-Vendor>Oracle</Specification-Vendor>
                        <Specification-Version>${actual.coherence.version}</Specification-Version>
                      </manifestEntries>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>grid-edition</id>
      <activation>
        <property>
          <name>grid-edition</name>
        </property>
      </activation>
      <properties>
        <coherence.group.id>com.oracle.coherence</coherence.group.id>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>${copy.rename.maven.plugin.version}</version>
            <executions>
              <execution>
                <id>copy-and-rename-file</id>
                <phase>compile</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <sourceFile>
                        ${project.build.directory}/classes/tangosol-coherence-override-grid-edition.xml
                      </sourceFile>
                      <destinationFile>
                        ${project.build.directory}/classes/tangosol-coherence-override.xml
                      </destinationFile>
                    </fileSet>
                    <fileSet>
                      <sourceFile>
                        ${project.build.directory}/classes/cache-config-grid-edition.xml
                      </sourceFile>
                      <destinationFile>
                        ${project.build.directory}/classes/cache-config.xml
                      </destinationFile>
                    </fileSet>
                  </fileSets>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- JDk11 specifics -->
    <profile>
      <id>javadoc-jdk11</id>
      <activation>
        <jdk>11</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
              <release>8</release>
            </configuration>
          </plugin>

          <!-- attach javadoc -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven.javadoc.plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs-jdk11</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <additionalDependencies>
                <additionalDependency>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-core</artifactId>
                  <version>${com.sun.xml.bind.version}</version>
                </additionalDependency>
                <additionalDependency>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-impl</artifactId>
                  <version>${com.sun.xml.bind.version}</version>
                </additionalDependency>
                <additionalDependency>
                  <groupId>javax.xml.bind</groupId>
                  <artifactId>jaxb-api</artifactId>
                  <version>${com.sun.xml.bind.version}</version>
                </additionalDependency>
                <additionalDependency>
                  <groupId>javax.activation</groupId>
                  <artifactId>javax.activation-api</artifactId>
                  <version>${javax.activation.version}</version>
                </additionalDependency>
              </additionalDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-core</artifactId>
          <version>${com.sun.xml.bind.version}</version>
        </dependency>
        <dependency>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
          <version>${com.sun.xml.bind.version}</version>
        </dependency>
        <dependency>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
          <version>${com.sun.xml.bind.version}</version>
        </dependency>
        <dependency>
          <groupId>javax.activation</groupId>
          <artifactId>javax.activation-api</artifactId>
          <version>${javax.activation.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <!-- docker profile for building image for Coherence Operator -->
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>docker</name>
        </property>
      </activation>
      
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${jib.version}</version>
            <configuration>
              <from>
                <image>gcr.io/distroless/java@sha256:f59b26c5ecc735514a38afbf845214383c4e2ba1fdd15a76225339b8ab7da8ef</image>
              </from>
              <to>
                <image>${project.artifactId}</image>
                <tags>
                  <tag>${docker.version}</tag>
                </tags>
              </to>
              <container>
                <!-- good defaults intended for containers -->
                <jvmFlags>
                  <jmxFlag>-server</jmxFlag>
                  <jmxFlag>-Djava.awt.headless=true</jmxFlag>
                  <jmxFlag>-XX:+UnlockExperimentalVMOptions</jmxFlag>
                  <jmxFlag>-XX:+UseCGroupMemoryLimitForHeap</jmxFlag>
                  <jmxFlag>-XX:InitialRAMFraction=2</jmxFlag>
                  <jmxFlag>-XX:MinRAMFraction=2</jmxFlag>
                  <jmxFlag>-XX:MaxRAMFraction=2</jmxFlag>
                  <jmxFlag>-XX:+UseG1GC</jmxFlag>
                </jvmFlags>
                <mainClass>com.tangosol.net.DefaultCacheServer</mainClass>
                <ports>
                  <port>8080</port>
                </ports>
                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
              </container>
              <containerizingMode>packaged</containerizingMode>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>${jib.goal}</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
